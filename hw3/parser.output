Terminals which are not used

   MK_DOT
   ERROR


State 196 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | /* empty */

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | /* empty */

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | /* empty */

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON

   30 type: INT
   31     | FLOAT
   32     | ID

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB cexpr MK_RB
   38         | dim_decl MK_LB cexpr MK_RB

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | MK_LPAREN cexpr MK_RPAREN

   47 init_id_list: init_id
   48             | init_id_list MK_COMMA init_id

   49 init_id: ID
   50        | ID dim_decl
   51        | ID OP_ASSIGN relop_expr

   52 stmt_list: stmt_list stmt
   53          | stmt

   54 stmt: MK_LBRACE block MK_RBRACE
   55     | WHILE MK_LPAREN test MK_RPAREN stmt
   56     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   57     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   58     | IF MK_LPAREN test MK_RPAREN stmt
   59     | IF MK_LPAREN test MK_RPAREN stmt ELSE stmt
   60     | ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
   61     | MK_SEMICOLON
   62     | RETURN MK_SEMICOLON
   63     | RETURN relop_expr MK_SEMICOLON

   64 assign_expr_list: nonempty_assign_expr_list
   65                 | /* empty */

   66 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   67                          | assign_expr

   68 test: assign_expr

   69 assign_expr: ID OP_ASSIGN relop_expr
   70            | relop_expr

   71 relop_expr: relop_term
   72           | relop_expr OP_OR relop_term

   73 relop_term: relop_factor
   74           | relop_term OP_AND relop_factor

   75 relop_factor: expr
   76             | expr rel_op expr

   77 rel_op: OP_EQ
   78       | OP_GE
   79       | OP_LE
   80       | OP_NE
   81       | OP_GT
   82       | OP_LT

   83 relop_expr_list: nonempty_relop_expr_list
   84                | /* empty */

   85 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   86                         | relop_expr

   87 expr: expr add_op term
   88     | term

   89 add_op: OP_PLUS
   90       | OP_MINUS

   91 term: term mul_op factor
   92     | factor

   93 mul_op: OP_TIMES
   94       | OP_DIVIDE

   95 factor: MK_LPAREN relop_expr MK_RPAREN
   96       | una_op MK_LPAREN relop_expr MK_RPAREN
   97       | CONST
   98       | una_op CONST
   99       | ID MK_LPAREN relop_expr_list MK_RPAREN
  100       | una_op ID MK_LPAREN relop_expr_list MK_RPAREN
  101       | var_ref
  102       | una_op var_ref

  103 una_op: OP_PLUS
  104       | OP_MINUS
  105       | OP_NOT

  106 var_ref: ID
  107        | ID dim_list

  108 dim_list: dim_list MK_LB expr MK_RB
  109         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 32 33 34 35 36 49 50 51 60 69 99 100 106 107
CONST (259) 45 97 98
VOID (260) 8 10 28
INT (261) 30
FLOAT (262) 31
IF (263) 58 59
ELSE (264) 59
WHILE (265) 55
FOR (266) 56
TYPEDEF (267) 27 28
OP_ASSIGN (268) 51 57 69
OP_OR (269) 72
OP_AND (270) 74
OP_NOT (271) 105
OP_EQ (272) 77
OP_NE (273) 80
OP_GT (274) 81
OP_LT (275) 82
OP_GE (276) 78
OP_LE (277) 79
OP_PLUS (278) 39 89 103
OP_MINUS (279) 40 90 104
OP_TIMES (280) 42 93
OP_DIVIDE (281) 43 94
MK_LB (282) 15 16 37 38 108 109
MK_RB (283) 15 16 37 38 108 109
MK_LPAREN (284) 7 8 9 10 46 55 56 58 59 60 95 96 99 100
MK_RPAREN (285) 7 8 9 10 46 55 56 58 59 60 95 96 99 100
MK_LBRACE (286) 7 8 9 10 54
MK_RBRACE (287) 7 8 9 10 54
MK_COMMA (288) 11 34 35 48 66 85
MK_SEMICOLON (289) 27 28 29 56 57 60 61 62 63
MK_DOT (290)
ERROR (291)
RETURN (292) 62 63


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15 16, on right: 14 16
expr_null (46)
    on left: 17 18, on right: 15
block (47)
    on left: 19 20 21 22, on right: 7 8 9 10 54
decl_list (48)
    on left: 23 24, on right: 5 19 21 23
decl (49)
    on left: 25 26, on right: 23 24
type_decl (50)
    on left: 27 28, on right: 25
var_decl (51)
    on left: 29, on right: 26
type (52)
    on left: 30 31 32, on right: 7 9 13 14 27 29
id_list (53)
    on left: 33 34 35 36, on right: 27 28 34 35
dim_decl (54)
    on left: 37 38, on right: 35 36 38 50
cexpr (55)
    on left: 39 40 41, on right: 37 38 39 40 46
mcexpr (56)
    on left: 42 43 44, on right: 39 40 41 42 43
cfactor (57)
    on left: 45 46, on right: 42 43 44
init_id_list (58)
    on left: 47 48, on right: 29 48
init_id (59)
    on left: 49 50 51, on right: 47 48
stmt_list (60)
    on left: 52 53, on right: 19 20 52
stmt (61)
    on left: 54 55 56 57 58 59 60 61 62 63, on right: 52 53 55 56 58
    59
assign_expr_list (62)
    on left: 64 65, on right: 56
nonempty_assign_expr_list (63)
    on left: 66 67, on right: 64 66
test (64)
    on left: 68, on right: 55 58 59
assign_expr (65)
    on left: 69 70, on right: 66 67 68
relop_expr (66)
    on left: 71 72, on right: 51 57 63 69 70 72 85 86 95 96
relop_term (67)
    on left: 73 74, on right: 71 72 74
relop_factor (68)
    on left: 75 76, on right: 73 74
rel_op (69)
    on left: 77 78 79 80 81 82, on right: 76
relop_expr_list (70)
    on left: 83 84, on right: 56 60 99 100
nonempty_relop_expr_list (71)
    on left: 85 86, on right: 83 85
expr (72)
    on left: 87 88, on right: 16 17 75 76 87 108 109
add_op (73)
    on left: 89 90, on right: 87
term (74)
    on left: 91 92, on right: 87 88 91
mul_op (75)
    on left: 93 94, on right: 91
factor (76)
    on left: 95 96 97 98 99 100 101 102, on right: 91 92
una_op (77)
    on left: 103 104 105, on right: 96 98 100 102
var_ref (78)
    on left: 106 107, on right: 57 101 102
dim_list (79)
    on left: 108 109, on right: 107 108


state 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


state 1

   32 type: ID .

    $default  reduce using rule 32 (type)


state 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 15


state 3

   30 type: INT .

    $default  reduce using rule 30 (type)


state 4

   31 type: FLOAT .

    $default  reduce using rule 31 (type)


state 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    ID     shift, and go to state 1
    VOID   shift, and go to state 16
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 17


state 6

    0 $accept: program . $end

    $end  shift, and go to state 18


state 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 19
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


state 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


state 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 20
    decl           go to state 21
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


state 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


state 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


state 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 22

    init_id_list  go to state 23
    init_id       go to state 24


state 15

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 25


state 16

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 26

    id_list  go to state 27


state 17

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 26

    id_list  go to state 28


state 18

    0 $accept: program $end .

    $default  accept


state 19

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


state 20

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


state 21

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


state 22

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30
    MK_LPAREN  shift, and go to state 31

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 32


state 23

   29 var_decl: type init_id_list . MK_SEMICOLON
   48 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 33
    MK_SEMICOLON  shift, and go to state 34


state 24

   47 init_id_list: init_id .

    $default  reduce using rule 47 (init_id_list)


state 25

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 1
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 35

    param_list  go to state 36
    param       go to state 37
    type        go to state 38


state 26

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 39


state 27

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 41


state 28

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 40
    MK_SEMICOLON  shift, and go to state 42


state 29

   51 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    relop_expr    go to state 49
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 30

   37 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 57
    MK_LPAREN  shift, and go to state 58

    cexpr    go to state 59
    mcexpr   go to state 60
    cfactor  go to state 61


state 31

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    ID         shift, and go to state 1
    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 62

    param_list  go to state 63
    param       go to state 37
    type        go to state 38


state 32

   38 dim_decl: dim_decl . MK_LB cexpr MK_RB
   50 init_id: ID dim_decl .

    MK_LB  shift, and go to state 64

    $default  reduce using rule 50 (init_id)


state 33

   48 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 65

    init_id  go to state 66


state 34

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


state 35

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 67


state 36

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 68
    MK_COMMA   shift, and go to state 69


state 37

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


state 38

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 70


state 39

   36 id_list: ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 64

    $default  reduce using rule 36 (id_list)


state 40

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 71


state 41

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


state 42

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


state 43

   99 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  106 var_ref: ID .
  107        | ID . dim_list

    MK_LB      shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 106 (var_ref)

    dim_list  go to state 74


state 44

   97 factor: CONST .

    $default  reduce using rule 97 (factor)


state 45

  105 una_op: OP_NOT .

    $default  reduce using rule 105 (una_op)


state 46

  103 una_op: OP_PLUS .

    $default  reduce using rule 103 (una_op)


state 47

  104 una_op: OP_MINUS .

    $default  reduce using rule 104 (una_op)


state 48

   95 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    relop_expr    go to state 75
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 49

   51 init_id: ID OP_ASSIGN relop_expr .
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 76

    $default  reduce using rule 51 (init_id)


state 50

   71 relop_expr: relop_term .
   74 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 77

    $default  reduce using rule 71 (relop_expr)


state 51

   73 relop_term: relop_factor .

    $default  reduce using rule 73 (relop_term)


state 52

   75 relop_factor: expr .
   76             | expr . rel_op expr
   87 expr: expr . add_op term

    OP_EQ     shift, and go to state 78
    OP_NE     shift, and go to state 79
    OP_GT     shift, and go to state 80
    OP_LT     shift, and go to state 81
    OP_GE     shift, and go to state 82
    OP_LE     shift, and go to state 83
    OP_PLUS   shift, and go to state 84
    OP_MINUS  shift, and go to state 85

    $default  reduce using rule 75 (relop_factor)

    rel_op  go to state 86
    add_op  go to state 87


state 53

   88 expr: term .
   91 term: term . mul_op factor

    OP_TIMES   shift, and go to state 88
    OP_DIVIDE  shift, and go to state 89

    $default  reduce using rule 88 (expr)

    mul_op  go to state 90


state 54

   92 term: factor .

    $default  reduce using rule 92 (term)


state 55

   96 factor: una_op . MK_LPAREN relop_expr MK_RPAREN
   98       | una_op . CONST
  100       | una_op . ID MK_LPAREN relop_expr_list MK_RPAREN
  102       | una_op . var_ref

    ID         shift, and go to state 91
    CONST      shift, and go to state 92
    MK_LPAREN  shift, and go to state 93

    var_ref  go to state 94


state 56

  101 factor: var_ref .

    $default  reduce using rule 101 (factor)


state 57

   45 cfactor: CONST .

    $default  reduce using rule 45 (cfactor)


state 58

   46 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 57
    MK_LPAREN  shift, and go to state 58

    cexpr    go to state 95
    mcexpr   go to state 60
    cfactor  go to state 61


state 59

   37 dim_decl: MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 96
    OP_MINUS  shift, and go to state 97
    MK_RB     shift, and go to state 98


state 60

   41 cexpr: mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 41 (cexpr)


state 61

   44 mcexpr: cfactor .

    $default  reduce using rule 44 (mcexpr)


state 62

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 101


state 63

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 102
    MK_COMMA   shift, and go to state 69


state 64

   38 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 57
    MK_LPAREN  shift, and go to state 58

    cexpr    go to state 103
    mcexpr   go to state 60
    cfactor  go to state 61


state 65

   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 29
    MK_LB      shift, and go to state 30

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 32


state 66

   48 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 48 (init_id_list)


state 67

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 104
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    $default  reduce using rule 22 (block)

    block      go to state 111
    decl_list  go to state 112
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 113
    stmt_list  go to state 114
    stmt       go to state 115
    var_ref    go to state 116


state 68

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 117


state 69

   11 param_list: param_list MK_COMMA . param

    ID     shift, and go to state 1
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 118
    type   go to state 38


state 70

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 119

    $default  reduce using rule 13 (param)

    dim_fn  go to state 120


state 71

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 30

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 121


state 72

  109 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    expr     go to state 122
    term     go to state 53
    factor   go to state 54
    una_op   go to state 55
    var_ref  go to state 56


state 73

   99 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    $default  reduce using rule 84 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 50
    relop_factor              go to state 51
    relop_expr_list           go to state 124
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 52
    term                      go to state 53
    factor                    go to state 54
    una_op                    go to state 55
    var_ref                   go to state 56


state 74

  107 var_ref: ID dim_list .
  108 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 126

    $default  reduce using rule 107 (var_ref)


state 75

   72 relop_expr: relop_expr . OP_OR relop_term
   95 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 76
    MK_RPAREN  shift, and go to state 127


state 76

   72 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    relop_term    go to state 128
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 77

   74 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    relop_factor  go to state 129
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 78

   77 rel_op: OP_EQ .

    $default  reduce using rule 77 (rel_op)


state 79

   80 rel_op: OP_NE .

    $default  reduce using rule 80 (rel_op)


state 80

   81 rel_op: OP_GT .

    $default  reduce using rule 81 (rel_op)


state 81

   82 rel_op: OP_LT .

    $default  reduce using rule 82 (rel_op)


state 82

   78 rel_op: OP_GE .

    $default  reduce using rule 78 (rel_op)


state 83

   79 rel_op: OP_LE .

    $default  reduce using rule 79 (rel_op)


state 84

   89 add_op: OP_PLUS .

    $default  reduce using rule 89 (add_op)


state 85

   90 add_op: OP_MINUS .

    $default  reduce using rule 90 (add_op)


state 86

   76 relop_factor: expr rel_op . expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    expr     go to state 130
    term     go to state 53
    factor   go to state 54
    una_op   go to state 55
    var_ref  go to state 56


state 87

   87 expr: expr add_op . term

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    term     go to state 131
    factor   go to state 54
    una_op   go to state 55
    var_ref  go to state 56


state 88

   93 mul_op: OP_TIMES .

    $default  reduce using rule 93 (mul_op)


state 89

   94 mul_op: OP_DIVIDE .

    $default  reduce using rule 94 (mul_op)


state 90

   91 term: term mul_op . factor

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    factor   go to state 132
    una_op   go to state 55
    var_ref  go to state 56


state 91

  100 factor: una_op ID . MK_LPAREN relop_expr_list MK_RPAREN
  106 var_ref: ID .
  107        | ID . dim_list

    MK_LB      shift, and go to state 72
    MK_LPAREN  shift, and go to state 133

    $default  reduce using rule 106 (var_ref)

    dim_list  go to state 74


state 92

   98 factor: una_op CONST .

    $default  reduce using rule 98 (factor)


state 93

   96 factor: una_op MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    relop_expr    go to state 134
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 94

  102 factor: una_op var_ref .

    $default  reduce using rule 102 (factor)


state 95

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   46 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 96
    OP_MINUS   shift, and go to state 97
    MK_RPAREN  shift, and go to state 135


state 96

   39 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 57
    MK_LPAREN  shift, and go to state 58

    mcexpr   go to state 136
    cfactor  go to state 61


state 97

   40 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 57
    MK_LPAREN  shift, and go to state 58

    mcexpr   go to state 137
    cfactor  go to state 61


state 98

   37 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


state 99

   42 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 57
    MK_LPAREN  shift, and go to state 58

    cfactor  go to state 138


state 100

   43 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 57
    MK_LPAREN  shift, and go to state 58

    cfactor  go to state 139


state 101

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 104
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    $default  reduce using rule 22 (block)

    block      go to state 140
    decl_list  go to state 112
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 113
    stmt_list  go to state 114
    stmt       go to state 115
    var_ref    go to state 116


state 102

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 141


state 103

   38 dim_decl: dim_decl MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 96
    OP_MINUS  shift, and go to state 97
    MK_RB     shift, and go to state 142


state 104

   32 type: ID .
   60 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  106 var_ref: ID .
  107        | ID . dim_list

    MK_LB      shift, and go to state 72
    MK_LPAREN  shift, and go to state 143

    OP_ASSIGN  reduce using rule 106 (var_ref)
    $default   reduce using rule 32 (type)

    dim_list  go to state 74


state 105

   58 stmt: IF . MK_LPAREN test MK_RPAREN stmt
   59     | IF . MK_LPAREN test MK_RPAREN stmt ELSE stmt

    MK_LPAREN  shift, and go to state 144


state 106

   55 stmt: WHILE . MK_LPAREN test MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 145


state 107

   56 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 146


state 108

   54 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 104
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    $default  reduce using rule 22 (block)

    block      go to state 147
    decl_list  go to state 112
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 113
    stmt_list  go to state 114
    stmt       go to state 115
    var_ref    go to state 116


state 109

   61 stmt: MK_SEMICOLON .

    $default  reduce using rule 61 (stmt)


state 110

   62 stmt: RETURN . MK_SEMICOLON
   63     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 43
    CONST         shift, and go to state 44
    OP_NOT        shift, and go to state 45
    OP_PLUS       shift, and go to state 46
    OP_MINUS      shift, and go to state 47
    MK_LPAREN     shift, and go to state 48
    MK_SEMICOLON  shift, and go to state 148

    relop_expr    go to state 149
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 111

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 150


state 112

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 104
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    $default  reduce using rule 21 (block)

    decl       go to state 21
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 113
    stmt_list  go to state 151
    stmt       go to state 115
    var_ref    go to state 116


state 113

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 65

    init_id_list  go to state 23
    init_id       go to state 24


state 114

   20 block: stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    $default  reduce using rule 20 (block)

    stmt     go to state 153
    var_ref  go to state 116


state 115

   53 stmt_list: stmt .

    $default  reduce using rule 53 (stmt_list)


state 116

   57 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 154


state 117

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 104
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    $default  reduce using rule 22 (block)

    block      go to state 155
    decl_list  go to state 112
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 113
    stmt_list  go to state 114
    stmt       go to state 115
    var_ref    go to state 116


state 118

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


state 119

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    $default  reduce using rule 18 (expr_null)

    expr_null  go to state 156
    expr       go to state 157
    term       go to state 53
    factor     go to state 54
    una_op     go to state 55
    var_ref    go to state 56


state 120

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 158

    $default  reduce using rule 14 (param)


state 121

   35 id_list: id_list MK_COMMA ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 64

    $default  reduce using rule 35 (id_list)


state 122

   87 expr: expr . add_op term
  109 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 84
    OP_MINUS  shift, and go to state 85
    MK_RB     shift, and go to state 159

    add_op  go to state 87


state 123

   72 relop_expr: relop_expr . OP_OR relop_term
   86 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 76

    $default  reduce using rule 86 (nonempty_relop_expr_list)


state 124

   99 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 160


state 125

   83 relop_expr_list: nonempty_relop_expr_list .
   85 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 161

    $default  reduce using rule 83 (relop_expr_list)


state 126

  108 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    expr     go to state 162
    term     go to state 53
    factor   go to state 54
    una_op   go to state 55
    var_ref  go to state 56


state 127

   95 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 95 (factor)


state 128

   72 relop_expr: relop_expr OP_OR relop_term .
   74 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 77

    $default  reduce using rule 72 (relop_expr)


state 129

   74 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 74 (relop_term)


state 130

   76 relop_factor: expr rel_op expr .
   87 expr: expr . add_op term

    OP_PLUS   shift, and go to state 84
    OP_MINUS  shift, and go to state 85

    $default  reduce using rule 76 (relop_factor)

    add_op  go to state 87


state 131

   87 expr: expr add_op term .
   91 term: term . mul_op factor

    OP_TIMES   shift, and go to state 88
    OP_DIVIDE  shift, and go to state 89

    $default  reduce using rule 87 (expr)

    mul_op  go to state 90


state 132

   91 term: term mul_op factor .

    $default  reduce using rule 91 (term)


state 133

  100 factor: una_op ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    $default  reduce using rule 84 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 50
    relop_factor              go to state 51
    relop_expr_list           go to state 163
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 52
    term                      go to state 53
    factor                    go to state 54
    una_op                    go to state 55
    var_ref                   go to state 56


state 134

   72 relop_expr: relop_expr . OP_OR relop_term
   96 factor: una_op MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 76
    MK_RPAREN  shift, and go to state 164


state 135

   46 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 46 (cfactor)


state 136

   39 cexpr: cexpr OP_PLUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 39 (cexpr)


state 137

   40 cexpr: cexpr OP_MINUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 40 (cexpr)


state 138

   42 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 42 (mcexpr)


state 139

   43 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 43 (mcexpr)


state 140

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 165


state 141

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 104
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    $default  reduce using rule 22 (block)

    block      go to state 166
    decl_list  go to state 112
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 113
    stmt_list  go to state 114
    stmt       go to state 115
    var_ref    go to state 116


state 142

   38 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


state 143

   60 stmt: ID MK_LPAREN . relop_expr_list MK_RPAREN MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    $default  reduce using rule 84 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 50
    relop_factor              go to state 51
    relop_expr_list           go to state 167
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 52
    term                      go to state 53
    factor                    go to state 54
    una_op                    go to state 55
    var_ref                   go to state 56


state 144

   58 stmt: IF MK_LPAREN . test MK_RPAREN stmt
   59     | IF MK_LPAREN . test MK_RPAREN stmt ELSE stmt

    ID         shift, and go to state 168
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    test          go to state 169
    assign_expr   go to state 170
    relop_expr    go to state 171
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 145

   55 stmt: WHILE MK_LPAREN . test MK_RPAREN stmt

    ID         shift, and go to state 168
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    test          go to state 172
    assign_expr   go to state 170
    relop_expr    go to state 171
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 146

   56 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 168
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    $default  reduce using rule 65 (assign_expr_list)

    assign_expr_list           go to state 173
    nonempty_assign_expr_list  go to state 174
    assign_expr                go to state 175
    relop_expr                 go to state 171
    relop_term                 go to state 50
    relop_factor               go to state 51
    expr                       go to state 52
    term                       go to state 53
    factor                     go to state 54
    una_op                     go to state 55
    var_ref                    go to state 56


state 147

   54 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 176


state 148

   62 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 62 (stmt)


state 149

   63 stmt: RETURN relop_expr . MK_SEMICOLON
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 76
    MK_SEMICOLON  shift, and go to state 177


state 150

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


state 151

   19 block: decl_list stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    $default  reduce using rule 19 (block)

    stmt     go to state 153
    var_ref  go to state 116


state 152

   60 stmt: ID . MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON
  106 var_ref: ID .
  107        | ID . dim_list

    MK_LB      shift, and go to state 72
    MK_LPAREN  shift, and go to state 143

    $default  reduce using rule 106 (var_ref)

    dim_list  go to state 74


state 153

   52 stmt_list: stmt_list stmt .

    $default  reduce using rule 52 (stmt_list)


state 154

   57 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    relop_expr    go to state 178
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 155

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 179


state 156

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 180


state 157

   17 expr_null: expr .
   87 expr: expr . add_op term

    OP_PLUS   shift, and go to state 84
    OP_MINUS  shift, and go to state 85

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 87


state 158

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    expr     go to state 181
    term     go to state 53
    factor   go to state 54
    una_op   go to state 55
    var_ref  go to state 56


state 159

  109 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 109 (dim_list)


state 160

   99 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 99 (factor)


state 161

   85 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    relop_expr    go to state 182
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 162

   87 expr: expr . add_op term
  108 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 84
    OP_MINUS  shift, and go to state 85
    MK_RB     shift, and go to state 183

    add_op  go to state 87


state 163

  100 factor: una_op ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 184


state 164

   96 factor: una_op MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 96 (factor)


state 165

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


state 166

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 185


state 167

   60 stmt: ID MK_LPAREN relop_expr_list . MK_RPAREN MK_SEMICOLON

    MK_RPAREN  shift, and go to state 186


state 168

   69 assign_expr: ID . OP_ASSIGN relop_expr
   99 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
  106 var_ref: ID .
  107        | ID . dim_list

    OP_ASSIGN  shift, and go to state 187
    MK_LB      shift, and go to state 72
    MK_LPAREN  shift, and go to state 73

    $default  reduce using rule 106 (var_ref)

    dim_list  go to state 74


state 169

   58 stmt: IF MK_LPAREN test . MK_RPAREN stmt
   59     | IF MK_LPAREN test . MK_RPAREN stmt ELSE stmt

    MK_RPAREN  shift, and go to state 188


state 170

   68 test: assign_expr .

    $default  reduce using rule 68 (test)


state 171

   70 assign_expr: relop_expr .
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 76

    $default  reduce using rule 70 (assign_expr)


state 172

   55 stmt: WHILE MK_LPAREN test . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 189


state 173

   56 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 190


state 174

   64 assign_expr_list: nonempty_assign_expr_list .
   66 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 191

    $default  reduce using rule 64 (assign_expr_list)


state 175

   67 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 67 (nonempty_assign_expr_list)


state 176

   54 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 54 (stmt)


state 177

   63 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 63 (stmt)


state 178

   57 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 76
    MK_SEMICOLON  shift, and go to state 192


state 179

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


state 180

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


state 181

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   87 expr: expr . add_op term

    OP_PLUS   shift, and go to state 84
    OP_MINUS  shift, and go to state 85
    MK_RB     shift, and go to state 193

    add_op  go to state 87


state 182

   72 relop_expr: relop_expr . OP_OR relop_term
   85 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 76

    $default  reduce using rule 85 (nonempty_relop_expr_list)


state 183

  108 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 108 (dim_list)


state 184

  100 factor: una_op ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 100 (factor)


state 185

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


state 186

   60 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN . MK_SEMICOLON

    MK_SEMICOLON  shift, and go to state 194


state 187

   69 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    relop_expr    go to state 195
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 188

   58 stmt: IF MK_LPAREN test MK_RPAREN . stmt
   59     | IF MK_LPAREN test MK_RPAREN . stmt ELSE stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    stmt     go to state 196
    var_ref  go to state 116


state 189

   55 stmt: WHILE MK_LPAREN test MK_RPAREN . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    stmt     go to state 197
    var_ref  go to state 116


state 190

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 43
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    $default  reduce using rule 84 (relop_expr_list)

    relop_expr                go to state 123
    relop_term                go to state 50
    relop_factor              go to state 51
    relop_expr_list           go to state 198
    nonempty_relop_expr_list  go to state 125
    expr                      go to state 52
    term                      go to state 53
    factor                    go to state 54
    una_op                    go to state 55
    var_ref                   go to state 56


state 191

   66 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 168
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    assign_expr   go to state 199
    relop_expr    go to state 171
    relop_term    go to state 50
    relop_factor  go to state 51
    expr          go to state 52
    term          go to state 53
    factor        go to state 54
    una_op        go to state 55
    var_ref       go to state 56


state 192

   57 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 57 (stmt)


state 193

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


state 194

   60 stmt: ID MK_LPAREN relop_expr_list MK_RPAREN MK_SEMICOLON .

    $default  reduce using rule 60 (stmt)


state 195

   69 assign_expr: ID OP_ASSIGN relop_expr .
   72 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 76

    $default  reduce using rule 69 (assign_expr)


state 196

   58 stmt: IF MK_LPAREN test MK_RPAREN stmt .
   59     | IF MK_LPAREN test MK_RPAREN stmt . ELSE stmt

    ELSE  shift, and go to state 200

    ELSE      [reduce using rule 58 (stmt)]
    $default  reduce using rule 58 (stmt)


state 197

   55 stmt: WHILE MK_LPAREN test MK_RPAREN stmt .

    $default  reduce using rule 55 (stmt)


state 198

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 201


state 199

   66 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 66 (nonempty_assign_expr_list)


state 200

   59 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    stmt     go to state 202
    var_ref  go to state 116


state 201

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 168
    CONST      shift, and go to state 44
    OP_NOT     shift, and go to state 45
    OP_PLUS    shift, and go to state 46
    OP_MINUS   shift, and go to state 47
    MK_LPAREN  shift, and go to state 48

    $default  reduce using rule 65 (assign_expr_list)

    assign_expr_list           go to state 203
    nonempty_assign_expr_list  go to state 174
    assign_expr                go to state 175
    relop_expr                 go to state 171
    relop_term                 go to state 50
    relop_factor               go to state 51
    expr                       go to state 52
    term                       go to state 53
    factor                     go to state 54
    una_op                     go to state 55
    var_ref                    go to state 56


state 202

   59 stmt: IF MK_LPAREN test MK_RPAREN stmt ELSE stmt .

    $default  reduce using rule 59 (stmt)


state 203

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 204


state 204

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 152
    IF            shift, and go to state 105
    WHILE         shift, and go to state 106
    FOR           shift, and go to state 107
    MK_LBRACE     shift, and go to state 108
    MK_SEMICOLON  shift, and go to state 109
    RETURN        shift, and go to state 110

    stmt     go to state 205
    var_ref  go to state 116


state 205

   56 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 56 (stmt)
