Useless nonterminals

   test


Terminals which are not used

   IF
   ELSE
   WHILE
   MK_DOT
   ERROR


Useless rules

  102 test: assign_expr


Grammar

    0 $accept: program $end

    1 program: global_decl_list
    2        | /* empty */

    3 global_decl_list: global_decl_list global_decl
    4                 | global_decl

    5 global_decl: decl_list function_decl
    6            | function_decl

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    8              | VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

   11 param_list: param_list MK_COMMA param
   12           | param

   13 param: type ID
   14      | type ID dim_fn

   15 dim_fn: MK_LB expr_null MK_RB
   16       | dim_fn MK_LB expr MK_RB

   17 expr_null: expr
   18          | /* empty */

   19 block: decl_list stmt_list
   20      | stmt_list
   21      | decl_list
   22      | /* empty */

   23 decl_list: decl_list decl
   24          | decl

   25 decl: type_decl
   26     | var_decl

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON
   28          | TYPEDEF VOID id_list MK_SEMICOLON

   29 var_decl: type init_id_list MK_SEMICOLON
   30         | ID id_list MK_SEMICOLON

   31 type: INT
   32     | FLOAT

   33 id_list: ID
   34        | id_list MK_COMMA ID
   35        | id_list MK_COMMA ID dim_decl
   36        | ID dim_decl

   37 dim_decl: MK_LB cexpr MK_RB
   38         | dim_decl MK_LB cexpr MK_RB

   39 cexpr: cexpr OP_PLUS mcexpr
   40      | cexpr OP_MINUS mcexpr
   41      | mcexpr

   42 mcexpr: mcexpr OP_TIMES cfactor
   43       | mcexpr OP_DIVIDE cfactor
   44       | cfactor

   45 cfactor: CONST
   46        | MK_LPAREN cexpr MK_RPAREN

   47 init_id_list: init_id
   48             | init_id_list MK_COMMA init_id

   49 init_id: ID
   50        | ID dim_decl
   51        | ID OP_ASSIGN relop_expr

   52 stmt_list: stmt_list stmt
   53          | stmt

   54 stmt: MK_LBRACE block MK_RBRACE
   55     | FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt
   56     | var_ref OP_ASSIGN relop_expr MK_SEMICOLON
   57     | MK_SEMICOLON
   58     | RETURN MK_SEMICOLON
   59     | RETURN relop_expr MK_SEMICOLON

   60 assign_expr_list: nonempty_assign_expr_list
   61                 | /* empty */

   62 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr
   63                          | assign_expr

   64 assign_expr: ID OP_ASSIGN relop_expr
   65            | relop_expr

   66 relop_expr: relop_term
   67           | relop_expr OP_OR relop_term

   68 relop_term: relop_factor
   69           | relop_term OP_AND relop_factor

   70 relop_factor: expr
   71             | expr rel_op expr

   72 rel_op: OP_EQ
   73       | OP_GE
   74       | OP_LE
   75       | OP_NE
   76       | OP_GT
   77       | OP_LT

   78 relop_expr_list: nonempty_relop_expr_list
   79                | /* empty */

   80 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr
   81                         | relop_expr

   82 expr: expr add_op term
   83     | term

   84 add_op: OP_PLUS
   85       | OP_MINUS

   86 term: term mul_op factor
   87     | factor

   88 mul_op: OP_TIMES
   89       | OP_DIVIDE

   90 factor: MK_LPAREN relop_expr MK_RPAREN
   91       | OP_NOT MK_LPAREN relop_expr MK_RPAREN
   92       | CONST
   93       | OP_NOT CONST
   94       | ID MK_LPAREN relop_expr_list MK_RPAREN
   95       | OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN
   96       | var_ref
   97       | OP_NOT var_ref

   98 var_ref: ID
   99        | ID dim_list

  100 dim_list: dim_list MK_LB expr MK_RB
  101         | MK_LB expr MK_RB


Terminals, with rules where they appear

$end (0) 0
error (256)
ID (258) 7 8 9 10 13 14 30 33 34 35 36 49 50 51 64 94 95 98 99
CONST (259) 45 92 93
VOID (260) 8 10 28
INT (261) 31
FLOAT (262) 32
IF (263)
ELSE (264)
WHILE (265)
FOR (266) 55
TYPEDEF (267) 27 28
OP_ASSIGN (268) 51 56 64
OP_OR (269) 67
OP_AND (270) 69
OP_NOT (271) 91 93 95 97
OP_EQ (272) 72
OP_NE (273) 75
OP_GT (274) 76
OP_LT (275) 77
OP_GE (276) 73
OP_LE (277) 74
OP_PLUS (278) 39 84
OP_MINUS (279) 40 85
OP_TIMES (280) 42 88
OP_DIVIDE (281) 43 89
MK_LB (282) 15 16 37 38 100 101
MK_RB (283) 15 16 37 38 100 101
MK_LPAREN (284) 7 8 9 10 46 55 90 91 94 95
MK_RPAREN (285) 7 8 9 10 46 55 90 91 94 95
MK_LBRACE (286) 7 8 9 10 54
MK_RBRACE (287) 7 8 9 10 54
MK_COMMA (288) 11 34 35 48 62 80
MK_SEMICOLON (289) 27 28 29 30 55 56 57 58 59
MK_DOT (290)
ERROR (291)
RETURN (292) 58 59


Nonterminals, with rules where they appear

$accept (38)
    on left: 0
program (39)
    on left: 1 2, on right: 0
global_decl_list (40)
    on left: 3 4, on right: 1 3
global_decl (41)
    on left: 5 6, on right: 3 4
function_decl (42)
    on left: 7 8 9 10, on right: 5 6
param_list (43)
    on left: 11 12, on right: 7 8 11
param (44)
    on left: 13 14, on right: 11 12
dim_fn (45)
    on left: 15 16, on right: 14 16
expr_null (46)
    on left: 17 18, on right: 15
block (47)
    on left: 19 20 21 22, on right: 7 8 9 10 54
decl_list (48)
    on left: 23 24, on right: 5 19 21 23
decl (49)
    on left: 25 26, on right: 23 24
type_decl (50)
    on left: 27 28, on right: 25
var_decl (51)
    on left: 29 30, on right: 26
type (52)
    on left: 31 32, on right: 7 9 13 14 27 29
id_list (53)
    on left: 33 34 35 36, on right: 27 28 30 34 35
dim_decl (54)
    on left: 37 38, on right: 35 36 38 50
cexpr (55)
    on left: 39 40 41, on right: 37 38 39 40 46
mcexpr (56)
    on left: 42 43 44, on right: 39 40 41 42 43
cfactor (57)
    on left: 45 46, on right: 42 43 44
init_id_list (58)
    on left: 47 48, on right: 29 48
init_id (59)
    on left: 49 50 51, on right: 47 48
stmt_list (60)
    on left: 52 53, on right: 19 20 52
stmt (61)
    on left: 54 55 56 57 58 59, on right: 52 53 55
assign_expr_list (62)
    on left: 60 61, on right: 55
nonempty_assign_expr_list (63)
    on left: 62 63, on right: 60 62
assign_expr (64)
    on left: 64 65, on right: 62 63
relop_expr (65)
    on left: 66 67, on right: 51 56 59 64 65 67 80 81 90 91
relop_term (66)
    on left: 68 69, on right: 66 67 69
relop_factor (67)
    on left: 70 71, on right: 68 69
rel_op (68)
    on left: 72 73 74 75 76 77, on right: 71
relop_expr_list (69)
    on left: 78 79, on right: 55 94 95
nonempty_relop_expr_list (70)
    on left: 80 81, on right: 78 80
expr (71)
    on left: 82 83, on right: 16 17 70 71 82 100 101
add_op (72)
    on left: 84 85, on right: 82
term (73)
    on left: 86 87, on right: 82 83 86
mul_op (74)
    on left: 88 89, on right: 86
factor (75)
    on left: 90 91 92 93 94 95 96 97, on right: 86 87
var_ref (76)
    on left: 98 99, on right: 56 96 97
dim_list (77)
    on left: 100 101, on right: 99 100


state 0

    0 $accept: . program $end

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 2 (program)

    program           go to state 6
    global_decl_list  go to state 7
    global_decl       go to state 8
    function_decl     go to state 9
    decl_list         go to state 10
    decl              go to state 11
    type_decl         go to state 12
    var_decl          go to state 13
    type              go to state 14


state 1

   30 var_decl: ID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 16


state 2

    8 function_decl: VOID . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    ID  shift, and go to state 17


state 3

   31 type: INT .

    $default  reduce using rule 31 (type)


state 4

   32 type: FLOAT .

    $default  reduce using rule 32 (type)


state 5

   27 type_decl: TYPEDEF . type id_list MK_SEMICOLON
   28          | TYPEDEF . VOID id_list MK_SEMICOLON

    VOID   shift, and go to state 18
    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    type  go to state 19


state 6

    0 $accept: program . $end

    $end  shift, and go to state 20


state 7

    1 program: global_decl_list .
    3 global_decl_list: global_decl_list . global_decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    $default  reduce using rule 1 (program)

    global_decl    go to state 21
    function_decl  go to state 9
    decl_list      go to state 10
    decl           go to state 11
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 8

    4 global_decl_list: global_decl .

    $default  reduce using rule 4 (global_decl_list)


state 9

    6 global_decl: function_decl .

    $default  reduce using rule 6 (global_decl)


state 10

    5 global_decl: decl_list . function_decl
   23 decl_list: decl_list . decl

    ID       shift, and go to state 1
    VOID     shift, and go to state 2
    INT      shift, and go to state 3
    FLOAT    shift, and go to state 4
    TYPEDEF  shift, and go to state 5

    function_decl  go to state 22
    decl           go to state 23
    type_decl      go to state 12
    var_decl       go to state 13
    type           go to state 14


state 11

   24 decl_list: decl .

    $default  reduce using rule 24 (decl_list)


state 12

   25 decl: type_decl .

    $default  reduce using rule 25 (decl)


state 13

   26 decl: var_decl .

    $default  reduce using rule 26 (decl)


state 14

    7 function_decl: type . ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type . ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 24

    init_id_list  go to state 25
    init_id       go to state 26


state 15

   33 id_list: ID .
   36        | ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 33 (id_list)

    dim_decl  go to state 28


state 16

   30 var_decl: ID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 30


state 17

    8 function_decl: VOID ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE

    MK_LPAREN  shift, and go to state 31


state 18

   28 type_decl: TYPEDEF VOID . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 32


state 19

   27 type_decl: TYPEDEF type . id_list MK_SEMICOLON

    ID  shift, and go to state 15

    id_list  go to state 33


state 20

    0 $accept: program $end .

    $default  accept


state 21

    3 global_decl_list: global_decl_list global_decl .

    $default  reduce using rule 3 (global_decl_list)


state 22

    5 global_decl: decl_list function_decl .

    $default  reduce using rule 5 (global_decl)


state 23

   23 decl_list: decl_list decl .

    $default  reduce using rule 23 (decl_list)


state 24

    7 function_decl: type ID . MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID . MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE
   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27
    MK_LPAREN  shift, and go to state 35

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 36


state 25

   29 var_decl: type init_id_list . MK_SEMICOLON
   48 init_id_list: init_id_list . MK_COMMA init_id

    MK_COMMA      shift, and go to state 37
    MK_SEMICOLON  shift, and go to state 38


state 26

   47 init_id_list: init_id .

    $default  reduce using rule 47 (init_id_list)


state 27

   37 dim_decl: MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 41
    mcexpr   go to state 42
    cfactor  go to state 43


state 28

   36 id_list: ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 36 (id_list)


state 29

   34 id_list: id_list MK_COMMA . ID
   35        | id_list MK_COMMA . ID dim_decl

    ID  shift, and go to state 45


state 30

   30 var_decl: ID id_list MK_SEMICOLON .

    $default  reduce using rule 30 (var_decl)


state 31

    8 function_decl: VOID ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
   10              | VOID ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 46

    param_list  go to state 47
    param       go to state 48
    type        go to state 49


state 32

   28 type_decl: TYPEDEF VOID id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 50


state 33

   27 type_decl: TYPEDEF type id_list . MK_SEMICOLON
   34 id_list: id_list . MK_COMMA ID
   35        | id_list . MK_COMMA ID dim_decl

    MK_COMMA      shift, and go to state 29
    MK_SEMICOLON  shift, and go to state 51


state 34

   51 init_id: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 56
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 35

    7 function_decl: type ID MK_LPAREN . param_list MK_RPAREN MK_LBRACE block MK_RBRACE
    9              | type ID MK_LPAREN . MK_RPAREN MK_LBRACE block MK_RBRACE

    INT        shift, and go to state 3
    FLOAT      shift, and go to state 4
    MK_RPAREN  shift, and go to state 63

    param_list  go to state 64
    param       go to state 48
    type        go to state 49


state 36

   38 dim_decl: dim_decl . MK_LB cexpr MK_RB
   50 init_id: ID dim_decl .

    MK_LB  shift, and go to state 44

    $default  reduce using rule 50 (init_id)


state 37

   48 init_id_list: init_id_list MK_COMMA . init_id

    ID  shift, and go to state 65

    init_id  go to state 66


state 38

   29 var_decl: type init_id_list MK_SEMICOLON .

    $default  reduce using rule 29 (var_decl)


state 39

   45 cfactor: CONST .

    $default  reduce using rule 45 (cfactor)


state 40

   46 cfactor: MK_LPAREN . cexpr MK_RPAREN

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 67
    mcexpr   go to state 42
    cfactor  go to state 43


state 41

   37 dim_decl: MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 68
    OP_MINUS  shift, and go to state 69
    MK_RB     shift, and go to state 70


state 42

   41 cexpr: mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 71
    OP_DIVIDE  shift, and go to state 72

    $default  reduce using rule 41 (cexpr)


state 43

   44 mcexpr: cfactor .

    $default  reduce using rule 44 (mcexpr)


state 44

   38 dim_decl: dim_decl MK_LB . cexpr MK_RB

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cexpr    go to state 73
    mcexpr   go to state 42
    cfactor  go to state 43


state 45

   34 id_list: id_list MK_COMMA ID .
   35        | id_list MK_COMMA ID . dim_decl

    MK_LB  shift, and go to state 27

    $default  reduce using rule 34 (id_list)

    dim_decl  go to state 74


state 46

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 75


state 47

    8 function_decl: VOID ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 76
    MK_COMMA   shift, and go to state 77


state 48

   12 param_list: param .

    $default  reduce using rule 12 (param_list)


state 49

   13 param: type . ID
   14      | type . ID dim_fn

    ID  shift, and go to state 78


state 50

   28 type_decl: TYPEDEF VOID id_list MK_SEMICOLON .

    $default  reduce using rule 28 (type_decl)


state 51

   27 type_decl: TYPEDEF type id_list MK_SEMICOLON .

    $default  reduce using rule 27 (type_decl)


state 52

   94 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
   98 var_ref: ID .
   99        | ID . dim_list

    MK_LB      shift, and go to state 79
    MK_LPAREN  shift, and go to state 80

    $default  reduce using rule 98 (var_ref)

    dim_list  go to state 81


state 53

   92 factor: CONST .

    $default  reduce using rule 92 (factor)


state 54

   91 factor: OP_NOT . MK_LPAREN relop_expr MK_RPAREN
   93       | OP_NOT . CONST
   95       | OP_NOT . ID MK_LPAREN relop_expr_list MK_RPAREN
   97       | OP_NOT . var_ref

    ID         shift, and go to state 82
    CONST      shift, and go to state 83
    MK_LPAREN  shift, and go to state 84

    var_ref  go to state 85


state 55

   90 factor: MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 86
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 56

   51 init_id: ID OP_ASSIGN relop_expr .
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 51 (init_id)


state 57

   66 relop_expr: relop_term .
   69 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 88

    $default  reduce using rule 66 (relop_expr)


state 58

   68 relop_term: relop_factor .

    $default  reduce using rule 68 (relop_term)


state 59

   70 relop_factor: expr .
   71             | expr . rel_op expr
   82 expr: expr . add_op term

    OP_EQ     shift, and go to state 89
    OP_NE     shift, and go to state 90
    OP_GT     shift, and go to state 91
    OP_LT     shift, and go to state 92
    OP_GE     shift, and go to state 93
    OP_LE     shift, and go to state 94
    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 70 (relop_factor)

    rel_op  go to state 97
    add_op  go to state 98


state 60

   83 expr: term .
   86 term: term . mul_op factor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 83 (expr)

    mul_op  go to state 101


state 61

   87 term: factor .

    $default  reduce using rule 87 (term)


state 62

   96 factor: var_ref .

    $default  reduce using rule 96 (factor)


state 63

    9 function_decl: type ID MK_LPAREN MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 102


state 64

    7 function_decl: type ID MK_LPAREN param_list . MK_RPAREN MK_LBRACE block MK_RBRACE
   11 param_list: param_list . MK_COMMA param

    MK_RPAREN  shift, and go to state 103
    MK_COMMA   shift, and go to state 77


state 65

   49 init_id: ID .
   50        | ID . dim_decl
   51        | ID . OP_ASSIGN relop_expr

    OP_ASSIGN  shift, and go to state 34
    MK_LB      shift, and go to state 27

    $default  reduce using rule 49 (init_id)

    dim_decl  go to state 36


state 66

   48 init_id_list: init_id_list MK_COMMA init_id .

    $default  reduce using rule 48 (init_id_list)


state 67

   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr
   46 cfactor: MK_LPAREN cexpr . MK_RPAREN

    OP_PLUS    shift, and go to state 68
    OP_MINUS   shift, and go to state 69
    MK_RPAREN  shift, and go to state 104


state 68

   39 cexpr: cexpr OP_PLUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 105
    cfactor  go to state 43


state 69

   40 cexpr: cexpr OP_MINUS . mcexpr

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    mcexpr   go to state 106
    cfactor  go to state 43


state 70

   37 dim_decl: MK_LB cexpr MK_RB .

    $default  reduce using rule 37 (dim_decl)


state 71

   42 mcexpr: mcexpr OP_TIMES . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 107


state 72

   43 mcexpr: mcexpr OP_DIVIDE . cfactor

    CONST      shift, and go to state 39
    MK_LPAREN  shift, and go to state 40

    cfactor  go to state 108


state 73

   38 dim_decl: dim_decl MK_LB cexpr . MK_RB
   39 cexpr: cexpr . OP_PLUS mcexpr
   40      | cexpr . OP_MINUS mcexpr

    OP_PLUS   shift, and go to state 68
    OP_MINUS  shift, and go to state 69
    MK_RB     shift, and go to state 109


state 74

   35 id_list: id_list MK_COMMA ID dim_decl .
   38 dim_decl: dim_decl . MK_LB cexpr MK_RB

    MK_LB  shift, and go to state 44

    $default  reduce using rule 35 (id_list)


state 75

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 110
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 115
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


state 76

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 121


state 77

   11 param_list: param_list MK_COMMA . param

    INT    shift, and go to state 3
    FLOAT  shift, and go to state 4

    param  go to state 122
    type   go to state 49


state 78

   13 param: type ID .
   14      | type ID . dim_fn

    MK_LB  shift, and go to state 123

    $default  reduce using rule 13 (param)

    dim_fn  go to state 124


state 79

  101 dim_list: MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 125
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


state 80

   94 factor: ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 79 (relop_expr_list)

    relop_expr                go to state 126
    relop_term                go to state 57
    relop_factor              go to state 58
    relop_expr_list           go to state 127
    nonempty_relop_expr_list  go to state 128
    expr                      go to state 59
    term                      go to state 60
    factor                    go to state 61
    var_ref                   go to state 62


state 81

   99 var_ref: ID dim_list .
  100 dim_list: dim_list . MK_LB expr MK_RB

    MK_LB  shift, and go to state 129

    $default  reduce using rule 99 (var_ref)


state 82

   95 factor: OP_NOT ID . MK_LPAREN relop_expr_list MK_RPAREN
   98 var_ref: ID .
   99        | ID . dim_list

    MK_LB      shift, and go to state 79
    MK_LPAREN  shift, and go to state 130

    $default  reduce using rule 98 (var_ref)

    dim_list  go to state 81


state 83

   93 factor: OP_NOT CONST .

    $default  reduce using rule 93 (factor)


state 84

   91 factor: OP_NOT MK_LPAREN . relop_expr MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 131
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 85

   97 factor: OP_NOT var_ref .

    $default  reduce using rule 97 (factor)


state 86

   67 relop_expr: relop_expr . OP_OR relop_term
   90 factor: MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 87
    MK_RPAREN  shift, and go to state 132


state 87

   67 relop_expr: relop_expr OP_OR . relop_term

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_term    go to state 133
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 88

   69 relop_term: relop_term OP_AND . relop_factor

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_factor  go to state 134
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 89

   72 rel_op: OP_EQ .

    $default  reduce using rule 72 (rel_op)


state 90

   75 rel_op: OP_NE .

    $default  reduce using rule 75 (rel_op)


state 91

   76 rel_op: OP_GT .

    $default  reduce using rule 76 (rel_op)


state 92

   77 rel_op: OP_LT .

    $default  reduce using rule 77 (rel_op)


state 93

   73 rel_op: OP_GE .

    $default  reduce using rule 73 (rel_op)


state 94

   74 rel_op: OP_LE .

    $default  reduce using rule 74 (rel_op)


state 95

   84 add_op: OP_PLUS .

    $default  reduce using rule 84 (add_op)


state 96

   85 add_op: OP_MINUS .

    $default  reduce using rule 85 (add_op)


state 97

   71 relop_factor: expr rel_op . expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 135
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


state 98

   82 expr: expr add_op . term

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    term     go to state 136
    factor   go to state 61
    var_ref  go to state 62


state 99

   88 mul_op: OP_TIMES .

    $default  reduce using rule 88 (mul_op)


state 100

   89 mul_op: OP_DIVIDE .

    $default  reduce using rule 89 (mul_op)


state 101

   86 term: term mul_op . factor

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    factor   go to state 137
    var_ref  go to state 62


state 102

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 110
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 138
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


state 103

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN . MK_LBRACE block MK_RBRACE

    MK_LBRACE  shift, and go to state 139


state 104

   46 cfactor: MK_LPAREN cexpr MK_RPAREN .

    $default  reduce using rule 46 (cfactor)


state 105

   39 cexpr: cexpr OP_PLUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 71
    OP_DIVIDE  shift, and go to state 72

    $default  reduce using rule 39 (cexpr)


state 106

   40 cexpr: cexpr OP_MINUS mcexpr .
   42 mcexpr: mcexpr . OP_TIMES cfactor
   43       | mcexpr . OP_DIVIDE cfactor

    OP_TIMES   shift, and go to state 71
    OP_DIVIDE  shift, and go to state 72

    $default  reduce using rule 40 (cexpr)


state 107

   42 mcexpr: mcexpr OP_TIMES cfactor .

    $default  reduce using rule 42 (mcexpr)


state 108

   43 mcexpr: mcexpr OP_DIVIDE cfactor .

    $default  reduce using rule 43 (mcexpr)


state 109

   38 dim_decl: dim_decl MK_LB cexpr MK_RB .

    $default  reduce using rule 38 (dim_decl)


state 110

   30 var_decl: ID . id_list MK_SEMICOLON
   98 var_ref: ID .
   99        | ID . dim_list

    ID     shift, and go to state 15
    MK_LB  shift, and go to state 79

    $default  reduce using rule 98 (var_ref)

    id_list   go to state 16
    dim_list  go to state 81


state 111

   55 stmt: FOR . MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_LPAREN  shift, and go to state 140


state 112

   54 stmt: MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 110
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 141
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


state 113

   57 stmt: MK_SEMICOLON .

    $default  reduce using rule 57 (stmt)


state 114

   58 stmt: RETURN . MK_SEMICOLON
   59     | RETURN . relop_expr MK_SEMICOLON

    ID            shift, and go to state 52
    CONST         shift, and go to state 53
    OP_NOT        shift, and go to state 54
    MK_LPAREN     shift, and go to state 55
    MK_SEMICOLON  shift, and go to state 142

    relop_expr    go to state 143
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 115

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 144


state 116

   19 block: decl_list . stmt_list
   21      | decl_list .
   23 decl_list: decl_list . decl

    ID            shift, and go to state 110
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 21 (block)

    decl       go to state 23
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 145
    stmt       go to state 119
    var_ref    go to state 120


state 117

   29 var_decl: type . init_id_list MK_SEMICOLON

    ID  shift, and go to state 65

    init_id_list  go to state 25
    init_id       go to state 26


state 118

   20 block: stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 146
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 20 (block)

    stmt     go to state 147
    var_ref  go to state 120


state 119

   53 stmt_list: stmt .

    $default  reduce using rule 53 (stmt_list)


state 120

   56 stmt: var_ref . OP_ASSIGN relop_expr MK_SEMICOLON

    OP_ASSIGN  shift, and go to state 148


state 121

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 110
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 149
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


state 122

   11 param_list: param_list MK_COMMA param .

    $default  reduce using rule 11 (param_list)


state 123

   15 dim_fn: MK_LB . expr_null MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 18 (expr_null)

    expr_null  go to state 150
    expr       go to state 151
    term       go to state 60
    factor     go to state 61
    var_ref    go to state 62


state 124

   14 param: type ID dim_fn .
   16 dim_fn: dim_fn . MK_LB expr MK_RB

    MK_LB  shift, and go to state 152

    $default  reduce using rule 14 (param)


state 125

   82 expr: expr . add_op term
  101 dim_list: MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96
    MK_RB     shift, and go to state 153

    add_op  go to state 98


state 126

   67 relop_expr: relop_expr . OP_OR relop_term
   81 nonempty_relop_expr_list: relop_expr .

    OP_OR  shift, and go to state 87

    $default  reduce using rule 81 (nonempty_relop_expr_list)


state 127

   94 factor: ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 154


state 128

   78 relop_expr_list: nonempty_relop_expr_list .
   80 nonempty_relop_expr_list: nonempty_relop_expr_list . MK_COMMA relop_expr

    MK_COMMA  shift, and go to state 155

    $default  reduce using rule 78 (relop_expr_list)


state 129

  100 dim_list: dim_list MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 156
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


state 130

   95 factor: OP_NOT ID MK_LPAREN . relop_expr_list MK_RPAREN

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 79 (relop_expr_list)

    relop_expr                go to state 126
    relop_term                go to state 57
    relop_factor              go to state 58
    relop_expr_list           go to state 157
    nonempty_relop_expr_list  go to state 128
    expr                      go to state 59
    term                      go to state 60
    factor                    go to state 61
    var_ref                   go to state 62


state 131

   67 relop_expr: relop_expr . OP_OR relop_term
   91 factor: OP_NOT MK_LPAREN relop_expr . MK_RPAREN

    OP_OR      shift, and go to state 87
    MK_RPAREN  shift, and go to state 158


state 132

   90 factor: MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 90 (factor)


state 133

   67 relop_expr: relop_expr OP_OR relop_term .
   69 relop_term: relop_term . OP_AND relop_factor

    OP_AND  shift, and go to state 88

    $default  reduce using rule 67 (relop_expr)


state 134

   69 relop_term: relop_term OP_AND relop_factor .

    $default  reduce using rule 69 (relop_term)


state 135

   71 relop_factor: expr rel_op expr .
   82 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 71 (relop_factor)

    add_op  go to state 98


state 136

   82 expr: expr add_op term .
   86 term: term . mul_op factor

    OP_TIMES   shift, and go to state 99
    OP_DIVIDE  shift, and go to state 100

    $default  reduce using rule 82 (expr)

    mul_op  go to state 101


state 137

   86 term: term mul_op factor .

    $default  reduce using rule 86 (term)


state 138

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 159


state 139

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE . block MK_RBRACE

    ID            shift, and go to state 110
    INT           shift, and go to state 3
    FLOAT         shift, and go to state 4
    FOR           shift, and go to state 111
    TYPEDEF       shift, and go to state 5
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 22 (block)

    block      go to state 160
    decl_list  go to state 116
    decl       go to state 11
    type_decl  go to state 12
    var_decl   go to state 13
    type       go to state 117
    stmt_list  go to state 118
    stmt       go to state 119
    var_ref    go to state 120


state 140

   55 stmt: FOR MK_LPAREN . assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 161
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 61 (assign_expr_list)

    assign_expr_list           go to state 162
    nonempty_assign_expr_list  go to state 163
    assign_expr                go to state 164
    relop_expr                 go to state 165
    relop_term                 go to state 57
    relop_factor               go to state 58
    expr                       go to state 59
    term                       go to state 60
    factor                     go to state 61
    var_ref                    go to state 62


state 141

   54 stmt: MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 166


state 142

   58 stmt: RETURN MK_SEMICOLON .

    $default  reduce using rule 58 (stmt)


state 143

   59 stmt: RETURN relop_expr . MK_SEMICOLON
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 87
    MK_SEMICOLON  shift, and go to state 167


state 144

   10 function_decl: VOID ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 10 (function_decl)


state 145

   19 block: decl_list stmt_list .
   52 stmt_list: stmt_list . stmt

    ID            shift, and go to state 146
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    $default  reduce using rule 19 (block)

    stmt     go to state 147
    var_ref  go to state 120


state 146

   98 var_ref: ID .
   99        | ID . dim_list

    MK_LB  shift, and go to state 79

    $default  reduce using rule 98 (var_ref)

    dim_list  go to state 81


state 147

   52 stmt_list: stmt_list stmt .

    $default  reduce using rule 52 (stmt_list)


state 148

   56 stmt: var_ref OP_ASSIGN . relop_expr MK_SEMICOLON

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 168
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 149

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 169


state 150

   15 dim_fn: MK_LB expr_null . MK_RB

    MK_RB  shift, and go to state 170


state 151

   17 expr_null: expr .
   82 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96

    $default  reduce using rule 17 (expr_null)

    add_op  go to state 98


state 152

   16 dim_fn: dim_fn MK_LB . expr MK_RB

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    expr     go to state 171
    term     go to state 60
    factor   go to state 61
    var_ref  go to state 62


state 153

  101 dim_list: MK_LB expr MK_RB .

    $default  reduce using rule 101 (dim_list)


state 154

   94 factor: ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 94 (factor)


state 155

   80 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 172
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 156

   82 expr: expr . add_op term
  100 dim_list: dim_list MK_LB expr . MK_RB

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96
    MK_RB     shift, and go to state 173

    add_op  go to state 98


state 157

   95 factor: OP_NOT ID MK_LPAREN relop_expr_list . MK_RPAREN

    MK_RPAREN  shift, and go to state 174


state 158

   91 factor: OP_NOT MK_LPAREN relop_expr MK_RPAREN .

    $default  reduce using rule 91 (factor)


state 159

    9 function_decl: type ID MK_LPAREN MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 9 (function_decl)


state 160

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block . MK_RBRACE

    MK_RBRACE  shift, and go to state 175


state 161

   64 assign_expr: ID . OP_ASSIGN relop_expr
   94 factor: ID . MK_LPAREN relop_expr_list MK_RPAREN
   98 var_ref: ID .
   99        | ID . dim_list

    OP_ASSIGN  shift, and go to state 176
    MK_LB      shift, and go to state 79
    MK_LPAREN  shift, and go to state 80

    $default  reduce using rule 98 (var_ref)

    dim_list  go to state 81


state 162

   55 stmt: FOR MK_LPAREN assign_expr_list . MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 177


state 163

   60 assign_expr_list: nonempty_assign_expr_list .
   62 nonempty_assign_expr_list: nonempty_assign_expr_list . MK_COMMA assign_expr

    MK_COMMA  shift, and go to state 178

    $default  reduce using rule 60 (assign_expr_list)


state 164

   63 nonempty_assign_expr_list: assign_expr .

    $default  reduce using rule 63 (nonempty_assign_expr_list)


state 165

   65 assign_expr: relop_expr .
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 65 (assign_expr)


state 166

   54 stmt: MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 54 (stmt)


state 167

   59 stmt: RETURN relop_expr MK_SEMICOLON .

    $default  reduce using rule 59 (stmt)


state 168

   56 stmt: var_ref OP_ASSIGN relop_expr . MK_SEMICOLON
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR         shift, and go to state 87
    MK_SEMICOLON  shift, and go to state 179


state 169

    8 function_decl: VOID ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 8 (function_decl)


state 170

   15 dim_fn: MK_LB expr_null MK_RB .

    $default  reduce using rule 15 (dim_fn)


state 171

   16 dim_fn: dim_fn MK_LB expr . MK_RB
   82 expr: expr . add_op term

    OP_PLUS   shift, and go to state 95
    OP_MINUS  shift, and go to state 96
    MK_RB     shift, and go to state 180

    add_op  go to state 98


state 172

   67 relop_expr: relop_expr . OP_OR relop_term
   80 nonempty_relop_expr_list: nonempty_relop_expr_list MK_COMMA relop_expr .

    OP_OR  shift, and go to state 87

    $default  reduce using rule 80 (nonempty_relop_expr_list)


state 173

  100 dim_list: dim_list MK_LB expr MK_RB .

    $default  reduce using rule 100 (dim_list)


state 174

   95 factor: OP_NOT ID MK_LPAREN relop_expr_list MK_RPAREN .

    $default  reduce using rule 95 (factor)


state 175

    7 function_decl: type ID MK_LPAREN param_list MK_RPAREN MK_LBRACE block MK_RBRACE .

    $default  reduce using rule 7 (function_decl)


state 176

   64 assign_expr: ID OP_ASSIGN . relop_expr

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    relop_expr    go to state 181
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 177

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON . relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 52
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 79 (relop_expr_list)

    relop_expr                go to state 126
    relop_term                go to state 57
    relop_factor              go to state 58
    relop_expr_list           go to state 182
    nonempty_relop_expr_list  go to state 128
    expr                      go to state 59
    term                      go to state 60
    factor                    go to state 61
    var_ref                   go to state 62


state 178

   62 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA . assign_expr

    ID         shift, and go to state 161
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    assign_expr   go to state 183
    relop_expr    go to state 165
    relop_term    go to state 57
    relop_factor  go to state 58
    expr          go to state 59
    term          go to state 60
    factor        go to state 61
    var_ref       go to state 62


state 179

   56 stmt: var_ref OP_ASSIGN relop_expr MK_SEMICOLON .

    $default  reduce using rule 56 (stmt)


state 180

   16 dim_fn: dim_fn MK_LB expr MK_RB .

    $default  reduce using rule 16 (dim_fn)


state 181

   64 assign_expr: ID OP_ASSIGN relop_expr .
   67 relop_expr: relop_expr . OP_OR relop_term

    OP_OR  shift, and go to state 87

    $default  reduce using rule 64 (assign_expr)


state 182

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list . MK_SEMICOLON assign_expr_list MK_RPAREN stmt

    MK_SEMICOLON  shift, and go to state 184


state 183

   62 nonempty_assign_expr_list: nonempty_assign_expr_list MK_COMMA assign_expr .

    $default  reduce using rule 62 (nonempty_assign_expr_list)


state 184

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON . assign_expr_list MK_RPAREN stmt

    ID         shift, and go to state 161
    CONST      shift, and go to state 53
    OP_NOT     shift, and go to state 54
    MK_LPAREN  shift, and go to state 55

    $default  reduce using rule 61 (assign_expr_list)

    assign_expr_list           go to state 185
    nonempty_assign_expr_list  go to state 163
    assign_expr                go to state 164
    relop_expr                 go to state 165
    relop_term                 go to state 57
    relop_factor               go to state 58
    expr                       go to state 59
    term                       go to state 60
    factor                     go to state 61
    var_ref                    go to state 62


state 185

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list . MK_RPAREN stmt

    MK_RPAREN  shift, and go to state 186


state 186

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN . stmt

    ID            shift, and go to state 146
    FOR           shift, and go to state 111
    MK_LBRACE     shift, and go to state 112
    MK_SEMICOLON  shift, and go to state 113
    RETURN        shift, and go to state 114

    stmt     go to state 187
    var_ref  go to state 120


state 187

   55 stmt: FOR MK_LPAREN assign_expr_list MK_SEMICOLON relop_expr_list MK_SEMICOLON assign_expr_list MK_RPAREN stmt .

    $default  reduce using rule 55 (stmt)
